#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Keep sticky keys active for a long time so they effectively do not time out
#define STICKY_KEY_TIMEOUT 60000

#define XXXXX &none
#define _____ &trans

#define DEF 0
#define NAV 1
#define NUM 2

#define SK(KEY) &nk KEY KEY
#define MR(LAYER) &mr LAYER 0



#define WSWAP LG(NON_US_BACKSLASH)
#define win_next LS(LG(NON_US_BACKSLASH))
#define TABL LS(LG(LEFT_BRACKET))
#define TABR LS(LG(RIGHT_BRACKET))

#define UNDO LG(Z)
#define REDO LS(LG(Z))
#define COPY LG(C)
#define PASTE LG(V)
#define CUT LG(X)
#define SELECT LG(A)



&kscan0 {
  debounce-period = <14>;
};

&sk {
  release-after-ms = <STICKY_KEY_TIMEOUT>;
};

&caps_word {
  continue-list = <UNDERSCORE MINUS BACKSPACE>;
};

/ {

  behaviors {

    skq: sticky_key_quick_release {
      compatible = "zmk,behavior-sticky-key";
      label = "STICKY_KEY_QUICK_RELEASE";
      #binding-cells = <1>;
      bindings = <&kp>;
      quick-release;
      release-after-ms = <STICKY_KEY_TIMEOUT>;
    };
    
    // Sticky key on tap, normal key on hold
    // Useful for modifier-clicking without the modifier remaining active
    nk: not_so_sticky_key {
      compatible = "zmk,behavior-hold-tap";
      label = "NOT_SO_STICKY_KEY";
      #binding-cells = <2>;
      tapping_term_ms = <200>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&sk>;
    };

    mr: mo_layer_or_repeat {
      compatible = "zmk,behavior-hold-tap";
      label = "MO_REPEAT";
      #binding-cells = <2>;
      flavor = "hold-preferred";
      tapping-term-ms = <200>;
      bindings = <&mo>, <&key_repeat>;
    };

    // A hold-tap that activates without delay (like `&mo`)
    // mo_tap: mo_with_tap {
    //   compatible = "zmk,behavior-hold-tap";
    //   label = "MO_WITH_TAP";
    //   #binding-cells = <2>;
    //   tapping_term_ms = <0>;
    //   retro-tap;
    //   flavor = "hold-preferred";
    //   bindings = <&sl>, <&key_repeat>;
    // };

//    shift_dance: shift_dance {
//        compatible = "zmk,behavior-tap-dance";
//        label = "SHIFT_DANCE";
//        #binding-cells = <0>;
//        tapping-term-ms = <200>;
//        bindings = <&sk LEFT_SHIFT>, <&caps_word>;
//    };
//    #define _LSHFT_ &shift_dance


    //#include "hold_tap.dtsi"
    //#include "mod_morph.dtsi"
    //#include "macros.dtsi"
  };

  combos {
    #include "combos.dtsi"
  };

  keymap {
    compatible = "zmk,keymap";

//        // ╭───────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬───────╮
//             XXXXX   _____         _____         _____         _____         _____             _____         _____         _____         _____         _____         XXXXX
//        // ├───────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼───────┤
//             XXXXX   _____         _____         _____         _____         _____             _____         _____         _____         _____         _____         XXXXX
//        // ├───────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼───────┤
//             XXXXX   _____         _____         _____         _____         _____             _____         _____         _____         _____         _____         XXXXX
//        // ╰───────┴─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────┴───────╯
//                                                 _____         _____         _____             _____         _____         _____
//        //                                     ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯





    base_layer {
      label = "DEF";
      bindings = <
        // ╭───────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬───────╮
             XXXXX   &kp Y         &kp COMMA     &kp H         &kp W         &kp F             &kp Q         &kp K         &kp O         &kp U         &kp X         XXXXX
        // ├───────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼───────┤
             XXXXX   &kp S         &kp I         &kp N         &kp D         &kp C             &kp V         &kp T         &kp A         &kp E         &kp R         XXXXX
        // ├───────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼───────┤
             XXXXX   &kp J         &kp DOT       &kp L         &kp P         &kp B             &kp G         &kp M         &kp SEMI      &kp SLASH     &kp Z         XXXXX
        // ╰───────┴─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────┴───────╯
                                                 _____         &skq LSHIFT   MR(NAV)           &kp SPACE     &skq LSHIFT   _____
        //                                     ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
      >;
    };

    nav_layer {
      label = "NAV";
      bindings = <
        // ╭───────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬───────╮
             XXXXX   &kp ESC       _____         SK(LCTRL)     SK(RGUI)      _____             &kp WSWAP     &kp BSPC      &kp UP        &kp DEL       _____         XXXXX
        // ├───────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼───────┤
             XXXXX   &kp REDO      SK(LSHIFT)    SK(LALT)      SK(LGUI)      _____             _____         &kp LEFT      &kp DOWN      &kp RIGHT     _____         XXXXX
        // ├───────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼───────┤
             XXXXX   &kp UNDO      &kp CUT       &kp COPY      &kp PASTE     &kp SELECT        _____         &kp TAB       &kp TABL      &kp TABR      _____         XXXXX
        // ╰───────┴─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────┴───────╯
                                                 _____         _____         _____             &kp SPACE     &kp ENTER     _____
        //                                     ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
      >;
    };
  };
};

