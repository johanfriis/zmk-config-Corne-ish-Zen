#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#include "./helpers.h"
#include "./keycodes.h"

#define STICKY_KEY_TIMEOUT 60000

#define DEF 0
#define NAV 1
#define NUM 2
#define SYM 3
#define FUN 4

/**
 * Sticky key that does not time out rapidly
 * Useful for simulating one-shot shift 
 */
ZMK_BEHAVIOR(stk, sticky_key,
  quick-release;
  release-after-ms = <STICKY_KEY_TIMEOUT>;
  bindings = <&kp>;
)

/**
 * Sticky key on tap, normal key on hold
 * Useful for modifier-clicking without the modifier remaining active
 */
ZMK_BEHAVIOR(tp, hold_tap,
  tapping_term_ms = <200>;
  flavor = "tap-preferred";
  bindings = <&kp>, <&sk>;
)
#define TP(KEY) &tp KEY KEY 

ZMK_BEHAVIOR(hm, hold_tap,
    flavor = "tap-preferred";
    tapping-term-ms = <250>;
    quick-tap-ms = <250>;
    // global-quick-tap;
    bindings = <&kp>, <&kp>;
)
#define HM(LAYER, KEY) &hm LAYER KEY 


#define HMLG(KEY) &hm LEFT_GUI      KEY 
#define HMLA(KEY) &hm LEFT_ALT      KEY 
#define HMLC(KEY) &hm LEFT_CONTROL  KEY 
#define HMLS(KEY) &hm LEFT_SHIFT    KEY 
#define HMRG(KEY) &hm RIGHT_GUI     KEY 
#define HMRA(KEY) &hm RIGHT_ALT     KEY 
#define HMRC(KEY) &hm RIGHT_CONTROL KEY 
#define HMRS(KEY) &hm RIGHT_SHIFT   KEY 


/**
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     ___________   ___________   ___________   ___________   ___________       ___________   ___________   ___________   ___________   ___________ 
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     ___________   ___________   ___________   ___________   ___________       ___________   ___________   ___________   ___________   ___________ 
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     ___________   ___________   ___________   ___________   ___________       ___________   ___________   ___________   ___________   ___________ 
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                 ___________   ___________   ___________       ___________   ___________   ___________
//                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯ 
 */





/**
 * This is a variant of AptX mak mod based on
 * https://github.com/Apsu/zmk-luna/blob/main/config/luna.keymap
 */
ZMK_LAYER(def_layer,
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &kp SLASH     &kp W         &kp M         &kp P         &kp Q             &kp Z         &kp K         &kp COMMA     &kp DOT       &kp SEMI
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     HMLC(__R__)   HMLA(__S__)   HMLG(__N__)   HMLS(__T__)   &kp G             &kp V         HMRS(__H__)    HMRG(__A__)   HMRA(__I__)  HMRC(__O__) 
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp X         &kp C         &kp F         &kp D         &kp B             &kp J         &kp L         &kp U         &kp Y         &kp SQUOT 
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                 ___________   &stk LSHIFT   &lt NAV SPC       &lt NUM E     &stk RSHIFT   ___________
//                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯

// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
//   ___SLASH___   _____W_____   _____M_____   _____P_____   _____Q_____       _____Z_____   _____K_____   ___COMMA___   ____DOT____   ___SEMI____ 
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
//   HMLC(__R__)   HMLA(__S__)   HMLG(__N__)   HMLS(__T__)   _____G_____       _____V_____   HMRS(__H__)    HMRG(__A__)   HMRA(__I__)  HMRC(__O__) 
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
//   _____X_____   _____C_____   _____F_____   _____D_____   _____B_____       _____J_____   _____L_____   _____U_____   _____Y_____   ___SQUOT___ 
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
//                               ___________   &stk LSHIFT   &lt NAV SPC       &lt NUM E     &stk RSHIFT   ___________
//                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)

/**
 * 
 */
ZMK_LAYER(nav_layer,
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     ____ESC____   __SELECT___   ___________   ___________   __WINSWAP__       ___PGUP____   ___BKSPC___   ____UP_____   ____DEL____   ___________ 
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     ___LCTL____   ___LALT____   ___LGUI____   ___LSFT____   __DESKTOP__       ___PGDN____   ___LEFT____   ___DOWN____   ___RIGHT___   ___________ 
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     ___UNDO____   ____CUT____   ___COPY____   ___PASTE___   ___REDO____       ___________   ____TAB____   ___TABL____   ___TABR____   ___________ 
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                 ___________   ___________   ___________       ___SPACE___   ___ENTER___   ___________
//                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)

/**
 * 
 */
ZMK_LAYER(num_layer,
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     ___________   _____7_____   _____8_____   _____9_____   ___________       ___________   TP(RGUI)      TP(LCTRL)     ___________   ___________ 
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     __DESKTOP__   _____4_____   _____5_____   _____6_____   ___________       ___________   TP(LGUI)      TP(LALT)      TP(LSHIFT)    ___________ 
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     XXXXXXXXXXX   _____1_____   _____2_____   _____3_____   XXXXXXXXXXX       XXXXXXXXXXX   ___________   ___________   ___________   XXXXXXXXXXX 
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                 ___________   ___________   _____0_____       ___________   ___________   ___________
//                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯ 
)


/*                KEY POSITIONS

  ╭────────────────────╮ ╭────────────────────╮
  │  0   1   2   3   4 │ │  5   6   7   8   9 │
  │ 10  11  12  13  14 │ │ 15  16  17  18  19 │ 
  │ 20  21  22  23  24 │ │ 25  26  27  28  29 │
  ╰───────╮ 30  31  32 │ │ 33  34  35 ╭───────╯
          ╰────────────╯ ╰────────────╯
*/


ZMK_COMBO(caps_word, &caps_word, 30 35, DEF)
ZMK_COMBO(kp_q, &kp Q, 1 2, DEF)
ZMK_COMBO(kp_z, &kp Z, 2 3, DEF)


/**
 * Used for having a repeat key on a layer key
ZMK_BEHAVIOR(mr, hold_tap,
  tapping_term_ms = <200>;
  flavor = "tap-preferred";
  bindings = <&mo>, <&key_repeat>;
)
#define MR(LAYER) &mr LAYER 0
 */